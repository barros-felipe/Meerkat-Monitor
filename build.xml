<?xml version="1.0" ?> 
<project name="Meerkat-Monitor" default="dist" basedir=".">

	<property name="mm.id" value="Meerkat-Monitor" />
	<property name="built.by" value="pgnunes@meerkat-monitor.org" />
	<property name="mm.exe.file" value="${mm.id}.jar" />
	<property name="mm.deps.file" value="${mm.id}-deps.jar" />
	<property name="launch4j.dir" location="external_tools/launch4j" />
	<property name="nsis.dir" location="${basedir}/external_tools/nsis" />
	
	<property name="web.app.client.build.xml" location="build-webclient-war.xml" />
	
	
	
	<target name="init" depends="clean">
		<mkdir dir="build/classes"/>
		<mkdir dir="dist"/>
		<mkdir dir="bundle"/>
		<mkdir dir="temp"/>
	</target>
	
	<!-- COMPILE -->
	<target name="compile" depends="init" >
		<!-- Copy misc files and libs -->
		<copy file="COPYRIGHT" todir="bundle"/>
		<copy file="LICENSE" todir="bundle"/>
		<copy todir="bundle/lib">
			<fileset dir="lib"/>
		</copy>
		<copy file="${nsis.dir}/Meerkat-Monitor-Dashboard.URL" todir="bundle"/>
		
		<!-- Classpath -->
		<path id="compile.classpath">
			<fileset dir="bundle/lib">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="bundle/lib/jdbc-driver">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="bundle/lib/jsp">
				<include name="**/*.jar"/>
			</fileset>
		</path>
		
		<javac destdir="build/classes" debug="true" srcdir="src" includeantruntime="no">
			<classpath refid="compile.classpath"/>
		</javac>
		
		<!-- create the dep package (needed by web client) -->
		<jar destfile="dist/${mm.deps.file}" basedir="build/classes"/>
		
	</target>
	
	<!-- CREATE BUNDLE -->
	<target name="bundle" depends="compile">
		<!-- Setup manifest classpath -->
		<manifestclasspath property="jar.classpath" jarfile="bundle/${mm.exe.file}">
			<classpath refid="compile.classpath"/>
		</manifestclasspath>
		
		<!-- Copy resources and misc. -->
		<copy todir="build/classes/resources">
			<fileset dir="src/resources" />
		</copy>
		
		<copy file="src/log4j.properties" todir="build/classes"/>
		
		<!-- Create application jar -->
		<jar destfile="bundle/${mm.exe.file}" basedir="build/classes">
			<manifest>
				<attribute name="Built-By" value="${built.by}"/> 
				<attribute name="Build-JDK" value="${ant.java.version}"/>
				<attribute name="Class-Path" value="${jar.classpath}"/>
				<attribute name="Main-Class" value="org.meerkat.MeerkatMonitor"/>
				<attribute name="SplashScreen-Image" value="resources/splashscreen.png"/>
			</manifest>
		</jar>
		
		<!-- Create misc dir -->
		<mkdir dir="bundle/log"/>
		<mkdir dir="bundle/war"/>
		
		<!-- Create Web App Client WAR -->
		<antcall target="webAppClient" />	
		
		<!-- Create base -->
		<antcall target="zip_base" />		
	</target>
	
	<!-- ZIP BASE -->
	<target name="zip_base">
		<!-- create zip with all components -->
		<!-- used as base for creation of installers -->
		<zip destfile="temp/${mm.id}.zip" basedir="bundle" />
	</target>
	
	<!-- WEB APP CLIENT -->
	<target name="webAppClient">
		<copy file="dist/${mm.deps.file}" todir="WebContent/WEB-INF/lib"/>
		<ant antfile="${web.app.client.build.xml}" target="all" inheritall="false" />
		<!-- Copy war file back to dist -->
		<copy file="dist/MMWebClient.war" todir="bundle/war"/>
	</target>
	
	<!-- CLEAN BASE -->
	<target name="clean_base">
		<delete dir="bundle" />
		<mkdir dir="bundle"/>
		<unzip src="temp/${mm.id}.zip" dest="bundle"/>
	</target>
	
	<!-- CREATE WIN INSTALLER -->
	<target name="win-installer" if="isWindows">
		<!-- Get a clean base -->
		<antcall target="clean_base"/>
		
		<!-- Create Win executable -->
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
		<launch4j configFile="${launch4j.dir}/Meerkat-Monitor-l4j.xml" />
		
		<!-- remove the jar -->
		<delete file="bundle/${mm.exe.file}"/>
		
		<!-- Installer -->
		<exec executable="${nsis.dir}/makensis.exe">
			<arg value="/V2"/>
			<arg value="/XSetCompressor /FINAL /SOLID lzma"/>
			<arg value="${nsis.dir}/Meerkat-Monitor-NSIS.nsi"/>
		</exec>
		
		<!-- Move the installer to dist dir -->
		<move file="${nsis.dir}/Meerkat-Monitor-Installer.exe" todir="dist"/>
		
	</target>	
	
	<!-- CREATE LINUX PACKAGE -->
	<target name="linux-jar-sh">
		<!-- Get a clean base -->
		<antcall target="clean_base"/>
		
		<!-- Rename the jar -->
		<move file="bundle/${mm.exe.file}" tofile="bundle/${mm.id}.jar"/>
		
		<!-- Create dir and move files -->
		<mkdir dir="bundle/Meerkat-Monitor"/>
		<copy file="scripts/start.sh" todir="bundle"/>
		<chmod file="bundle/start.sh" perm="ugo+rx"/>
		
		<move todir="bundle/Meerkat-Monitor">
    		<fileset dir="bundle/" >
    			<exclude name="**/Meerkat-Monitor"/>
    		</fileset>
  		</move>
		
		<tar destfile="Meerkat-Monitor-Linux.tar.gz" compression="gzip">
  			<tarfileset dir="bundle/" />
		</tar>

		<!-- Move the installer to dist dir -->
		<move file="Meerkat-Monitor-Linux.tar.gz" todir="dist"/>
		
	</target>		
		
		
	<!-- CLEAN -->
	<target name="clean">
		<delete dir="dist" />
		<delete dir="build" />
		<delete dir="bundle" />
		<delete dir="temp" />
	</target>
	
	<!-- CREATE DIST -->
	<target name="dist" depends="bundle">
		<condition property="isWindows">
			<os family="windows" />
		</condition>
		
		<antcall target="win-installer" />
		<antcall target="linux-jar-sh" />
		
		<delete dir="build" />
		<delete dir="temp" />
	</target>
	
	
</project>
